;; -----------------------------------------------------
;; VARIABLES
;; -----------------------------------------------------

(defvar eww "eww -c $HOME/.config/eww/bar")
(defvar eww_scripts "$HOME/.config/eww/bar/scripts")

(defpoll memory :interval "15s" "scripts/memory")
(defpoll memory_used_mb :interval "2m" "scripts/mem-ad used")
(defpoll memory_total_mb :interval "2m" "scripts/mem-ad total")
(defpoll memory_free_mb :interval "2m" "scripts/mem-ad free")

(defvar music_reveal false)

(defpoll battery :interval "15s" "./scripts/battery get")
(defpoll battery_status :interval "1m" "./scripts/battery status")
(defpoll battery_icon :interval "1m" "./scripts/battery icon")

(defvar vol_reveal false)
;; (defpoll volume_percent :interval "3s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll volume_percent :interval "3s" "pulsemixer --get-volume | awk '{print $1}'")
(defpoll mic_percent :interval "3s" "amixer -D pulse sget Capture | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll VOL_ICON :interval "1s" "~/.local/bin/pulseaudio-control get-icon")
(defpoll VOL_MUTE :initial true :interval "1s" "~/.local/bin/pulseaudio-control get-mute")
(deflisten VOL_TOOLTIP "~/.local/bin/pulseaudio-control --notifications --icons-volume \",墳,\" --icon-muted \"婢\" --sink-nicknames-from \"device.description\" --sink-nickname \"alsa_output.pci-0000_00_1b.0.analog-stereo:  Speakers\" --sink-nickname \"alsa_output.usb-Kingston_HyperX_Virtual_Surround_Sound_00000000-00.analog-stereo:  Headphones\" listen")

(defpoll song :interval "2s"  "~/.config/eww/bar/scripts/music_info --song")
(defpoll song_artist :interval "2s"  "~/.config/eww/bar/scripts/music_info --artist")
(defpoll current_status :interval "1s"  "~/.config/eww/bar/scripts/music_info --time")
(defpoll song_status :interval "2s"  "~/.config/eww/bar/scripts/music_info --status")
(defpoll cover_art :interval "2s"  "~/.config/eww/bar/scripts/music_info --cover")

(defvar time_rev false)
(defpoll clock_hour :interval "1m" "date +\%H")
(defpoll clock_minute :interval "20s" "date +\%M")
(defpoll clock_date :interval "12h" "date '+[%a] %d/%m/%y'")
(defpoll calendar_day :interval "12h" "date '+%d'")
(defpoll calendar_year :interval "12h" "date '+%Y'")

;; -----------------------------------------------------
;; WIDGETS
;; -----------------------------------------------------

(defwidget system []
  (eventbox
    :onclick "${eww_scripts}/pop system"
    :onmiddleclick "${eww_scripts}/pop system"
    :onrightclick "${eww_scripts}/pop system"
  (box :class "sys_win" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false" :spacing 0
    (box :class "sys_bat_box" :orientation "h" :space-evenly "false"
      (circular-progress :value battery
	:class "sys_bat"
	:thickness 9
	(label :text battery_icon
	  :class "sys_icon_bat"
	  :limit-width 2
	  :show_truncated false
	  :wrap false))
      (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
	(label :text "battery"
	  :halign "start"
	  :class "sys_text_bat"
	  :limit-width 9
	  :show_truncated false
	  :wrap false)
	(label :text "${battery}%"
	  :halign "start"
	  :class "sys_text_bat_sub"
	  :limit-width 22
	  :show_truncated false
	  :wrap false)
	(label :text "${battery_status}"
	  :halign "start"
	  :class "sys_text_bat_sub"
	  :limit-width 22
	  :show_truncated false
	  :wrap false))
    )
    (label :text "" :class "sys_sep" :halign "center")
    (box :class "sys_mem_box" :orientation "h" :space-evenly "false" :halign "start"
      (circular-progress :value memory
	:class "sys_mem"
	:thickness 9
	(label :text ""
	  :class "sys_icon_mem"
	  :limit-width 2
	  :show_truncated false
	  :wrap false
	  :angle 0.0))
      (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
	(label :text "memory"
	  :halign "start"
	  :class "sys_text_mem"
	  :limit-width 9
	  :show_truncated false
	  :wrap false)
	(label :text "${memory_used_mb} | ${memory_total_mb}mb "
	  :halign "start"
	  :class "sys_text_mem_sub"
	  :limit-width 22
	  :show_truncated false
	  :wrap false)
	(label :text "${memory_free_mb}mb free"
	  :halign "start"
	  :class "sys_text_mem_sub"
	  :limit-width 22
	  :show_truncated false
	  :wrap false))
    )
  )
  )
)

(defwidget cal []
  (box :class "cal" :orientation "v"
    (box :class "cal-in"
      (calendar :class "cal"
	:day calendar_day
	:year calendar_year)
    )
  )
)

(defwidget audio []
  (eventbox
    :onclick "${eww_scripts}/pop audio"
    :onmiddleclick "${eww_scripts}/pop audio"
    :onrightclick "${eww_scripts}/pop audio"
  (box :class "audio-box" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
    (box :halign "v" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "speaker_icon" :orientation "v")
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
	(label :class "speaker_text" :text "speaker" :valign "center" :halign "left" )
	(box :class "speaker_bar" :halign "center" :vexpand "false" :hexpand "false"
	  (scale  :value volume_percent
	    :space-evenly "false"
	    :orientation "h"
	    :onchange "~/.local/bin/pulseaudio-control set {}"
	    ;; :onchange "pulsemixer --set-volume {}"
	    :tooltip "volume on ${volume_percent}%"
	    :max 100
	    :min 0)
	)
      )
    )
    (label :text "" :class "audio_sep" :halign "center")
    (box :halign "v" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "mic_icon" :orientation "v")
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
	(label :class "mic_text" :text "mic" :valign "center" :halign "left" )
	(box :class "mic_bar" :halign "center" :vexpand "false" :hexpand "false"
	  (scale  :value mic_percent
	    :space-evenly "false"
	    :orientation "h"
	    :tooltip "mic on ${mic_percent}%"
	    :onchange "amixer -D pulse sset Capture {}%"
	    :max 100
	    :min 0)
	)
      )
    )
  )
  )
)

;;  Music
(defwidget music_pop []
  (box :class "music_pop" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
    (box :class "music_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
    (box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
      (label :halign "center" :class "music" :wrap "true" :limit-width 13 :text song)
      (label :halign "center" :class "music_artist" :wrap "true" :limit-width 15 :text song_artist)
      (box :orientation "h" :spacing 15 :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
	(button :class "music_btn_prev" :onclick "~/.config/eww/bar/scripts/music_info --prev" "")
	(button :class "music_btn_play" :onclick "~/.config/eww/bar/scripts/music_info --toggle" song_status)
	(button :class "music_btn_next" :onclick "~/.config/eww/bar/scripts/music_info --next" "")
      )
      (box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" :space-evenly "false"
	(scale :onscroll "mpc -q seek {}" :min 0 :active "true" :max 100 :value current_status)
      )
)))

;; -----------------------------------------------------
;; WINDOWS
;; -----------------------------------------------------

(defwindow music_win :stacking "fg" :focusable "false" :screen 1
  :geometry (geometry :x "0" :y "7%" :width 428 :height 104 :anchor "top center")
  (music_pop)
)

(defwindow system
  :geometry (geometry :x "-20px"
    :y "7%"
    :anchor "top right"
    :width "290px"
    :height "120px")
  (system)
)

(defwindow calendar
  :geometry (geometry :x "-20px"
    :y "7%"
    :anchor "top right"
    :width "270px"
    :height "60px")
  (cal)
)

(defwindow audio_ctl
  :geometry (geometry :x "-20px"
    :y "7%"
    :anchor "top right"
    :width "280px"
    :height "60px")
  (audio)
)

