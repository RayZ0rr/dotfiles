#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# herbstluftwm scripts folder (for further use in commands below)
HLWM_SCRIPTS=~/.config/herbstluftwm/scripts

# Set default frame layout to tabbed
hc set default_frame_layout 2
# Including root window layout as tabbed
hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO

# ---------------------------------------------------
# KEYBINDINGS
# ---------------------------------------------------
# # if you have a super key you will be much happier with Mod set to Mod4
# Mod=Mod1    # Use alt as the main modifier
Altkey=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q	      quit
hc keybind $Mod-Shift-r	      reload
hc keybind $Mod-r	      remove
hc keybind $Mod-Shift-x	      close_or_remove
hc keybind $Mod-Return	      spawn "${TERMINAL:-wezterm}" # use your $TERMINAL or alacritty as fallback
# hc keybind $Mod-w spawn wezterm # use your $TERMINAL with xterm as fallback

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left	      focus left
hc keybind $Mod-Down	      focus down
hc keybind $Mod-Up	      focus up
hc keybind $Mod-Right	      focus right
hc keybind $Mod-h	      focus left
hc keybind $Mod-j	      focus down
hc keybind $Mod-k	      focus up
hc keybind $Mod-l	      focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left    shift left
hc keybind $Mod-Shift-Down    shift down
hc keybind $Mod-Shift-Up      shift up
hc keybind $Mod-Shift-Right   shift right
hc keybind $Mod-Shift-h	      shift left
hc keybind $Mod-Shift-j	      shift down
hc keybind $Mod-Shift-k	      shift up
hc keybind $Mod-Shift-l	      shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u	      split   bottom  0.51
hc keybind $Mod-o	      split   right   0.51
# Create empty frame adjacent to root frame
hc keybind $Mod-Shift-u       split   bottom  0.51 p
hc keybind $Mod-Shift-o       split   right   0.51 p
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
# tag_names=( {1..9} )
tag_names=("1-" "2-" "3-󰹕" "4-" "5-" "6-󰋩" "7-" "8-" "9-󰖟")
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
  hc add "${tag_names[$i]}"
  key="${tag_keys[$i]}"
  if ! [ -z "$key" ] ; then
    hc keybind "$Mod-$key" use_index "$i"
    hc keybind "$Mod-Shift-$key" move_index "$i"
  fi
done

hc add "󰟪"
hc keybind $Mod-0 use "󰟪"
hc keybind $Mod-Shift-0 move "󰟪"

# Save and load layout(s)
hc keybind $Mod-period spawn	${HLWM_SCRIPTS}/layout_manager.sh   "save"
hc keybind $Mod-comma spawn	${HLWM_SCRIPTS}/layout_manager.sh   "load"

# cycle through tags
hc keybind $Mod-Tab		use_previous
hc keybind $Mod-Shift-s		use_index +1 --skip-visible
hc keybind $Mod-Shift-a		use_index -1 --skip-visible
# cycle through only non-empty tags
hc keybind $Mod-s spawn		${HLWM_SCRIPTS}/hlwm-tagswitch next
hc keybind $Mod-a spawn		${HLWM_SCRIPTS}/hlwm-tagswitch prev

hc keybind $Mod-p spawn		${HLWM_SCRIPTS}/projector.sh "connect"
hc keybind $Mod-Control-p spawn		${HLWM_SCRIPTS}/projector.sh "disconnect"
hc keybind $Mod-Shift-p         shift_to_monitor "Projector"

# focus
hc keybind $Mod-Shift-e		cycle_all +1
hc keybind $Mod-Shift-w		cycle_all -1
hc keybind $Mod-e		cycle +1
hc keybind $Mod-w		cycle -1
hc keybind $Mod-c		cycle_monitor
hc keybind $Mod-v		jumpto urgent

# layouting
hc keybind $Mod-d		set_layout max
hc keybind $Mod-Shift-space	floating toggle
hc keybind $Mod-f		fullscreen toggle
hc keybind $Mod-space		set_attr clients.focus.floating toggle
hc keybind $Mod-b		set_attr clients.focus.decorated toggle
hc keybind $Mod-m		set_attr clients.focus.minimized true
hc keybind $Mod-n		jumpto last-minimized
hc keybind $Mod-Shift-m		spawn ${HLWM_SCRIPTS}/maximize.sh
hc keybind $Mod-t		pseudotile toggle
# restore all minimized windows of the focused tag
hc keybind $Mod-Ctrl-m		foreach CLIENT clients. \
     sprintf MINATT "%c.minimized" CLIENT \
     sprintf TAGATT "%c.tag" CLIENT and \
       , compare MINATT "=" "true" \
       , substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
       , set_attr MINATT false
# minimize all minimized windows of the focused tag
hc keybind $Mod-$Altkey-m	foreach CLIENT clients. \
     sprintf MINATT "%c.minimized" CLIENT \
     sprintf TAGATT "%c.tag" CLIENT and \
       , compare MINATT "=" "false" \
       , substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
       , set_attr MINATT true
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-$Altkey-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1
hc keybind $Mod-$Altkey-o                                                           \
            and . compare tags.focus.curframe_wcount ge 2                   \
                     . cycle_layout +1 horizontal max
hc keybind $Mod-$Altkey-u                                                           \
            and . compare tags.focus.curframe_wcount ge 2                   \
                     . cycle_layout +1 vertical max

# hc add desktop
# hc keybind $Altkey-Shift-d use desktop
# hc keybind $Altkey-d or , and . compare tags.focus.name = "desktop" . use_previous , use desktop

# Scratchpad (see scratchpad rule below)
hc keybind $Mod-Control-1	spawn ~/.config/herbstluftwm/scripts/scratch.sh "hlwmScratch1" "st -n hlwmScratch1"
hc keybind $Mod-Control-2	spawn ~/.config/herbstluftwm/scripts/scratch.sh "hlwmScratch2" "st -n hlwmScratch2"
hc keybind $Mod-Control-3	spawn ~/.config/herbstluftwm/scripts/scratch.sh "hlwmScratch3" "st -n hlwmScratch3"
hc keybind $Mod-Control-4	spawn ~/.config/herbstluftwm/scripts/scratch.sh "hlwmScratch4" "st -n hlwmScratch4"
hc keybind $Mod-Control-5	spawn ~/.config/herbstluftwm/scripts/scratch.sh "hlwmScratch5" "st -n hlwmScratch5"

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1	move
hc mousebind $Mod-Button2	zoom
hc mousebind $Mod-Button3	resize
hc set raise_on_focus		true

# theme
hc attr theme.tiling.reset	      1
hc attr theme.floating.reset	      1
# hc set frame_active_opacity	      100
hc set frame_border_active_color      '#789161'
hc set frame_border_normal_color      '#565656'
hc set frame_bg_normal_color	      '#00000000'
hc set frame_bg_active_color	      '#00000000'
hc set frame_border_width	      5
hc set show_frame_decorations 'focused_if_multiple'
# hc set always_show_frame	      off
hc set frame_bg_transparent	      on
hc set frame_transparent_width	      1
hc set frame_gap		      10

hc attr theme.title_height	      15
hc attr theme.title_when	      never
hc attr theme.floating.title_when     multiple_tabs
hc attr theme.title_font	      'Dejavu Sans:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.title_depth	      3	# space below the title's baseline
hc attr theme.active.color	      '#345F0Cef'
hc attr theme.title_color	      '#ffffff'
hc attr theme.normal.color	      '#32323200'
# hc attr theme.normal.color '#323232dd'
# hc attr theme.background_color '#00000000'
hc attr theme.urgent.color	      '#7811A1dd'
hc attr theme.tab_color		      '#1F1F1Fdd'
hc attr theme.active.tab_color	      '#2B4F0Add'
hc attr theme.active.tab_outer_color  '#6C8257dd'
hc attr theme.active.tab_title_color  '#ababab'
hc attr theme.normal.title_color      '#898989'
hc attr theme.border_width	      5
hc attr theme.inner_width	      1
hc attr theme.inner_color	      '#9A65B0'
hc attr theme.outer_color	      '#9A65B0'
hc attr theme.floating.border_width   4
hc attr theme.floating.outer_width    1
hc attr theme.floating.outer_color    '#9A65B0'
hc attr theme.floating.inner_color    '#345F0C'
hc attr theme.active.inner_color      '#789161'
hc attr theme.urgent.inner_color      '#9A65B0'
hc attr theme.normal.inner_color      '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.tiling.outer_width 1
hc attr theme.background_color '#141414'

# hc pad 0 5 5 5 5
hc set window_gap		      5
hc set frame_padding		      0
hc set smart_window_surroundings      on
hc set smart_frame_surroundings	      on
# hc set smart_frame_surroundings	      hide_gaps
hc set mouse_recenter_gap	      0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
hc rule instance~hlwmScratch.*	     floating=on	      floatplacement=center	# float all instances which contains 'hlwmScratch'
hc rule instance~Fzf-Menu.*	     floating=on	      floatplacement=center	# float all instances which contains 'Fzf-Menu'
hc rule class=firefox		     tag="${tag_names[8]}"    # move firefox to to tag 9
hc rule class=firefox		     title=Library	      floating=on		# Float History and Downloads windows of Firefox
hc rule class="Tor Browser"	     tag="${tag_names[5]}"    floating=on		# move all tor browser to tag 6
hc rule class=obs		     tag="${tag_names[6]}"    floating=on		floatplacement=center # float obs studio
hc rule class=zoom		     tag="${tag_names[6]}"    floating=on		floatplacement=center # float obs studio
hc rule class=mpv		     tag="${tag_names[6]}"    # move mpv player to tag 7
hc rule class=Kodi		     tag="${tag_names[6]}"    # Kodi send to tag 7
hc rule class="VirtualBox Manager"   tag="${tag_names[5]}"    # Virtulabox send to tag 6
hc rule class="Virt-manager"	     tag="${tag_names[5]}"    # Virt-manager send to tag 6
hc rule class=Steam		     tag="${tag_names[7]}"    floating=on		floatplacement=center # float Steam
hc rule title=alsamixer		     floating=on	      floatplacement=smart	# float Alsamixer volume control
hc rule title=tdrop		     floating=on	      floatplacement=center	# float tdrop dropdown terminal
hc rule title=nmtui		     floating=on	      floatplacement=smart	# float nmtui network manager
hc rule class=copyq		     floating=on	      floatplacement=off	# float copyq clipboard manager
# hc rule instance=copyq		     floating=on	      floatplacement=off	# float copyq clipboard manager
hc rule class="Syncthing GTK"        floating=on	      floatplacement=off	# float Syncthing GTK app
hc rule instance="Syncthing GTK"     floating=on	      floatplacement=off	# float Syncthing GTK app
hc rule title="Event Tester"	     floating=on	      floatplacement=smart	# float xev
hc rule class=Pavucontrol	     floating=on	      floatplacement=center	# float pulse audio volume control
hc rule class=KopiaUI		     floating=on	      floatplacement=center	# float kopia UI backup tool
hc rule class=ROOT		     floating=on	      floatplacement=center	# float CERN ROOT GUI
hc rule class="Matplotlib"	     floating=on	      floatplacement=center	# float matplotlib windows
hc rule class="Tk"	             floating=on	      floatplacement=center	# float matplotlib windows
hc rule class~Agent_GUI.*	             floating=on	      floatplacement=center	# float matplotlib windows
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on floatplacement=center
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

#  Detect first time autostart running
# herbstclient silent new_attr bool my_not_first_autostart
if hc silent new_attr bool my_not_first_autostart ; then
  ${HLWM_SCRIPTS}/startup.sh
  ${HLWM_SCRIPTS}/spawnClients
  # ~/.config/herbstluftwm/scripts/xfce4panelHLWM.sh
fi

# find the panel
# panel=~/.config/herbstluftwm/panel.sh
# [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
# for monitor in $(hc list_monitors | cut -d: -f1) ; do
#     # start it on each monitor
#     "$panel" "$monitor" &
# done
