#!/usr/bin/env bash
# Call dmenu on the given array of choices, effectively acting as a simple file explorer.
# If the selected choice is a folder, recursively open dmenu with the folder's contents as choices.
# If the selection is not a folder - or the current folder, denoted as '.' - attempt to open it with
# xdg-open or a tool configured via .edmrc-file and write the selection to a history file.
# The script can also open a terminal at the selected path.
#
# author: andreasl

config_dir="${XDG_CONFIG_HOME:-$HOME/.config}/edm"
mkdir -p "$config_dir"

define_standard_settings() {
    selected_path="$HOME"
    history_file="${config_dir}/history"
    max_history_entries=3

    choices=(
    '<open terminal here>'
    '.'
    '..'
    "$(ls "$selected_path")"
    "$(cat "$history_file")"
)

if [ "$(uname)" == "Darwin" ]; then
    open_command='open'
    open_terminal_command='open -a Terminal'
else
    open_command='xdg-open'
    open_terminal_command='gnome-terminal --working-directory'
fi
}
define_standard_settings
# the initial path explore-with-dmenu.sh uses; if not specified, defaults to $HOME
selected_path="$HOME"

# the path the selection history will be stored; defaults to ${HOME}/.config/.edm_history"
history_file="${HOME}/.config/.edm_history"

# the maximum number of recent entries that will be retained in the history file; defaults to 3
max_history_entries=3

# initial set of items shown at first
choices=(
'<open terminal here>'              # add this special item to open a Shell at $selected_path
'.'                                 # add this special item to open $selected_path in a Finder
'..'                                # add this special item to traverse to the parent folder
'path/to/some/often/used/folder'    # add subdolders of $selected_path like this
'path/to/some/often/used/file.txt'  # add files in folders under $selected_path like this
'my/music/library/'
'my/music/library/my favorite song.mp3'
"$(ls -t "$selected_path")"         # output of `ls -t` on the $selected_path
"$(cat "$history_file")"            # recent entries from prior runs
)

# if the array $choices is not specified, it defaults to:
# choices=(
#     '<open terminal here>'
#     '.'
#     '..'
#     "$(ls "$selected_path")"
#     "$(cat "$history_file")"
# )

# the variable $open_command must store a command that will be executed with the chosen item is a
# file or the string '.';
# the command must be able to open files and folders and handle directory paths as arguments
open_command='xdg-open'

# the variable $open_terminal_command must store a command that will be executed with the chosen
# item is the string '<open terminal here>';
# the command must handle can open files and folders and directory paths as arguments
open_terminal_command='alacritty --working-directory'

write_selection_to_history_file() {
    sed -i "\:${1}:d" "$history_file"
    printf '%s\n' "$1" >> "$history_file"
    printf '%s\n' "$(tail -n "$max_history_entries" "$history_file")" > "$history_file"
}

array_test() {
    # no argument passed
    [[ $# -ne 1 ]] && echo 'Supply a variable name as an argument'>&2 && return 2
    local var=$1
    # use a variable to avoid having to escape spaces
    local regex="^declare -[aA] ${var}(=|$)"
    [[ $(declare -p "$var" 2> /dev/null) =~ $regex ]] && return 0
}

while : ; do
    dmenu_result=( $(printf '%s\n' "${choices[@]}" | dmenu -i -p "$selected_path" -l 50 "$@") )
    array_test dmenu_result || exit 1
    if [ "$dmenu_result[0]" == '<open terminal here>' ]; then
        echo "1"
        $open_terminal_command "$selected_path"
        write_selection_to_history_file "$selected_path"
        exit 0
    elif [[ $dmenu_result[0] == '/'* ]]; then
        echo "2"
        selected_path="$dmenu_result"
    elif [[ $dmenu_result[0] =~ ^(https?|ftps): ]]; then
        echo "3"
        "$open_command" "$dmenu_result"
        write_selection_to_history_file "$dmenu_result"
        exit 0
    else
        echo "4"
        for file in "${dmenu_result[@]}"; do
            selected_path="$(realpath "${selected_path}/${file}")"
            selected_path_array+=("${selected_path}")
        done
    fi

    if array_test "${selected_path_array}" ; then
        echo "5"
        for item in "${selected_path_array[@]}"; do
            if [ -f "$item" ] || [ "$dmenu_result" = '.' ]; then
                echo "6"
                "$open_command" "$item" &
                write_selection_to_history_file "$item"
                exit 0
            elif [ -d "$item" ]; then
                echo "7"
                choices=( '<open terminal here>' '.' '..' "$(ls "$item")")
                break
            else
                echo "8"
                selected_path="$(dirname "$item")"
                break
            fi
        done
    fi
done
